/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkthreeJsStarMap"] = self["webpackChunkthreeJsStarMap"] || []).push([["node_modules_three-geometry-data_index_js"],{

/***/ "./node_modules/three-geometry-data/index.js":
/*!***************************************************!*\
  !*** ./node_modules/three-geometry-data/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("module.exports = function getVertexData (geometry) {\n  if (geometry.isBufferGeometry) {\n    throw new Error('Expected THREE.Geometry, not THREE.BufferGeometry type');\n  } else if (geometry.faces && geometry.faces.length > 0) {\n    var mesh = {};\n    mesh.vertices = newArray(geometry.vertices.length);\n    mesh.faces = newArray(geometry.faces.length);\n    var uvSets = geometry.faceVertexUvs;\n    geometry.faces.forEach(function (face, faceIndex) {\n      mesh.faces[faceIndex] = [ face.a, face.b, face.c ];\n      push(geometry, mesh.vertices, face.a, face, 0, uvSets, faceIndex);\n      push(geometry, mesh.vertices, face.b, face, 1, uvSets, faceIndex);\n      push(geometry, mesh.vertices, face.c, face, 2, uvSets, faceIndex);\n    });\n\n    var result = {\n      faces: mesh.faces,\n      attributes: {}\n    };\n    mesh.vertices.forEach(function (vertex) {\n      Object.keys(vertex).forEach(function (key) {\n        if (!(key in result.attributes)) {\n          result.attributes[key] = [];\n        }\n        var data = vertex[key];\n        result.attributes[key].push(data);\n      });\n    });\n    return result;\n  } else {\n    throw new Error('Expected geometry to have faces');\n  }\n};\n\n// push vertex if it hasn't been added already\nfunction push (geometry, array, vertexIndex, face, triangleIndex, uvSets, faceIndex) {\n  if (array[vertexIndex] == null) {\n    var vertex = {\n      position: geometry.vertices[vertexIndex].clone()\n    };\n    if (face.vertexNormals && face.vertexNormals.length >= 3) {\n      vertex.normal = face.vertexNormals[triangleIndex].clone();\n    } else if (face.normal) {\n      vertex.normal = face.normal.clone();\n    }\n    if (face.vertexColors && face.vertexColors.length >= 3) {\n      vertex.color = face.vertexColors[triangleIndex].clone();\n    }\n    uvSets.forEach(function (uvSet, i) {\n      var uvList = uvSet[faceIndex];\n      var uv = uvList[triangleIndex];\n      var key = i === 0 ? 'uv' : ('uv' + i);\n      vertex[key] = uv.clone();\n    });\n    array[vertexIndex] = vertex;\n  }\n}\n\n// build a new dense array\nfunction newArray (len) {\n  var arr = new Array(len);\n  for (var i = 0; i < len; i++) {\n    arr[i] = undefined;\n  }\n  return arr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhyZWUtZ2VvbWV0cnktZGF0YS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlZUpzU3Rhck1hcC8uL25vZGVfbW9kdWxlcy90aHJlZS1nZW9tZXRyeS1kYXRhL2luZGV4LmpzPzczMGYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRWZXJ0ZXhEYXRhIChnZW9tZXRyeSkge1xuICBpZiAoZ2VvbWV0cnkuaXNCdWZmZXJHZW9tZXRyeSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgVEhSRUUuR2VvbWV0cnksIG5vdCBUSFJFRS5CdWZmZXJHZW9tZXRyeSB0eXBlJyk7XG4gIH0gZWxzZSBpZiAoZ2VvbWV0cnkuZmFjZXMgJiYgZ2VvbWV0cnkuZmFjZXMubGVuZ3RoID4gMCkge1xuICAgIHZhciBtZXNoID0ge307XG4gICAgbWVzaC52ZXJ0aWNlcyA9IG5ld0FycmF5KGdlb21ldHJ5LnZlcnRpY2VzLmxlbmd0aCk7XG4gICAgbWVzaC5mYWNlcyA9IG5ld0FycmF5KGdlb21ldHJ5LmZhY2VzLmxlbmd0aCk7XG4gICAgdmFyIHV2U2V0cyA9IGdlb21ldHJ5LmZhY2VWZXJ0ZXhVdnM7XG4gICAgZ2VvbWV0cnkuZmFjZXMuZm9yRWFjaChmdW5jdGlvbiAoZmFjZSwgZmFjZUluZGV4KSB7XG4gICAgICBtZXNoLmZhY2VzW2ZhY2VJbmRleF0gPSBbIGZhY2UuYSwgZmFjZS5iLCBmYWNlLmMgXTtcbiAgICAgIHB1c2goZ2VvbWV0cnksIG1lc2gudmVydGljZXMsIGZhY2UuYSwgZmFjZSwgMCwgdXZTZXRzLCBmYWNlSW5kZXgpO1xuICAgICAgcHVzaChnZW9tZXRyeSwgbWVzaC52ZXJ0aWNlcywgZmFjZS5iLCBmYWNlLCAxLCB1dlNldHMsIGZhY2VJbmRleCk7XG4gICAgICBwdXNoKGdlb21ldHJ5LCBtZXNoLnZlcnRpY2VzLCBmYWNlLmMsIGZhY2UsIDIsIHV2U2V0cywgZmFjZUluZGV4KTtcbiAgICB9KTtcblxuICAgIHZhciByZXN1bHQgPSB7XG4gICAgICBmYWNlczogbWVzaC5mYWNlcyxcbiAgICAgIGF0dHJpYnV0ZXM6IHt9XG4gICAgfTtcbiAgICBtZXNoLnZlcnRpY2VzLmZvckVhY2goZnVuY3Rpb24gKHZlcnRleCkge1xuICAgICAgT2JqZWN0LmtleXModmVydGV4KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKCEoa2V5IGluIHJlc3VsdC5hdHRyaWJ1dGVzKSkge1xuICAgICAgICAgIHJlc3VsdC5hdHRyaWJ1dGVzW2tleV0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGF0YSA9IHZlcnRleFtrZXldO1xuICAgICAgICByZXN1bHQuYXR0cmlidXRlc1trZXldLnB1c2goZGF0YSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgZ2VvbWV0cnkgdG8gaGF2ZSBmYWNlcycpO1xuICB9XG59O1xuXG4vLyBwdXNoIHZlcnRleCBpZiBpdCBoYXNuJ3QgYmVlbiBhZGRlZCBhbHJlYWR5XG5mdW5jdGlvbiBwdXNoIChnZW9tZXRyeSwgYXJyYXksIHZlcnRleEluZGV4LCBmYWNlLCB0cmlhbmdsZUluZGV4LCB1dlNldHMsIGZhY2VJbmRleCkge1xuICBpZiAoYXJyYXlbdmVydGV4SW5kZXhdID09IG51bGwpIHtcbiAgICB2YXIgdmVydGV4ID0ge1xuICAgICAgcG9zaXRpb246IGdlb21ldHJ5LnZlcnRpY2VzW3ZlcnRleEluZGV4XS5jbG9uZSgpXG4gICAgfTtcbiAgICBpZiAoZmFjZS52ZXJ0ZXhOb3JtYWxzICYmIGZhY2UudmVydGV4Tm9ybWFscy5sZW5ndGggPj0gMykge1xuICAgICAgdmVydGV4Lm5vcm1hbCA9IGZhY2UudmVydGV4Tm9ybWFsc1t0cmlhbmdsZUluZGV4XS5jbG9uZSgpO1xuICAgIH0gZWxzZSBpZiAoZmFjZS5ub3JtYWwpIHtcbiAgICAgIHZlcnRleC5ub3JtYWwgPSBmYWNlLm5vcm1hbC5jbG9uZSgpO1xuICAgIH1cbiAgICBpZiAoZmFjZS52ZXJ0ZXhDb2xvcnMgJiYgZmFjZS52ZXJ0ZXhDb2xvcnMubGVuZ3RoID49IDMpIHtcbiAgICAgIHZlcnRleC5jb2xvciA9IGZhY2UudmVydGV4Q29sb3JzW3RyaWFuZ2xlSW5kZXhdLmNsb25lKCk7XG4gICAgfVxuICAgIHV2U2V0cy5mb3JFYWNoKGZ1bmN0aW9uICh1dlNldCwgaSkge1xuICAgICAgdmFyIHV2TGlzdCA9IHV2U2V0W2ZhY2VJbmRleF07XG4gICAgICB2YXIgdXYgPSB1dkxpc3RbdHJpYW5nbGVJbmRleF07XG4gICAgICB2YXIga2V5ID0gaSA9PT0gMCA/ICd1dicgOiAoJ3V2JyArIGkpO1xuICAgICAgdmVydGV4W2tleV0gPSB1di5jbG9uZSgpO1xuICAgIH0pO1xuICAgIGFycmF5W3ZlcnRleEluZGV4XSA9IHZlcnRleDtcbiAgfVxufVxuXG4vLyBidWlsZCBhIG5ldyBkZW5zZSBhcnJheVxuZnVuY3Rpb24gbmV3QXJyYXkgKGxlbikge1xuICB2YXIgYXJyID0gbmV3IEFycmF5KGxlbik7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBhcnJbaV0gPSB1bmRlZmluZWQ7XG4gIH1cbiAgcmV0dXJuIGFycjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/three-geometry-data/index.js\n");

/***/ })

}]);